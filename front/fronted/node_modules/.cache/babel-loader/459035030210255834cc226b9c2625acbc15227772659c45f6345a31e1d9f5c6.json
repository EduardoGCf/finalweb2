{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyeco final web 2\\\\front\\\\fronted\\\\src\\\\pages\\\\Public\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Public/Home.js\nimport React, { useState, useEffect } from 'react';\nimport Map from '../../components/Map';\nimport RoadList from '../../components/RoadList';\nimport RoadFilter from '../../components/RoadFilter';\nimport IncidentModal from '../../components/IncidentModal';\nimport ReportIncidentForm from '../../components/ReportIncidentForm';\nimport roadsAPI from '../../api/roadsAPI';\nimport municipalitiesAPI from '../../api/municipalitiesAPI';\nimport incidentsAPI from '../../api/incidentsAPI';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [roads, setRoads] = useState([]);\n  const [municipalities, setMunicipalities] = useState([]);\n  const [incidents, setIncidents] = useState([]);\n  const [selectedRoad, setSelectedRoad] = useState(null);\n  const [showIncidentModal, setShowIncidentModal] = useState(false);\n  const [incidentReasonPhoto, setIncidentReasonPhoto] = useState(null);\n  const [showReportForm, setShowReportForm] = useState(false);\n  const [selectedType, setSelectedType] = useState('');\n\n  // Estado para coordenadas seleccionadas en el mapa\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\n  const incidentTypes = ['Transitable con desvios y/o horarios de circulación', 'No transitable por conflictos sociales', 'Restricción vehicular', 'No transitable tráfico cerrado', 'Restricción vehicular, especial'];\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const r = await roadsAPI.getAll();\n        const m = await municipalitiesAPI.getAll();\n        const i = await incidentsAPI.getAll(); // sin token\n        setRoads(r);\n        setMunicipalities(m);\n        setIncidents(i);\n      } catch (error) {\n        console.error('Error cargando datos:', error);\n      }\n    }\n    loadData();\n  }, []);\n  const handleViewRoad = road => {\n    setSelectedRoad(road);\n  };\n  const handleViewReason = road => {\n    setIncidentReasonPhoto(road.incidentReasonPhoto || null);\n    setShowIncidentModal(true);\n  };\n  const filteredRoads = selectedType ? roads.filter(r => r.incidentType === selectedType) : roads;\n\n  // Esta función se llama cuando se envía el formulario del incidente\n\n  const handleReportSubmit = async formData => {\n    try {\n      const newIncident = await incidentsAPI.create(formData);\n      console.log('Incidente creado:', newIncident);\n      alert('Incidente reportado con éxito');\n      setShowReportForm(false);\n      const updatedIncidents = await incidentsAPI.getAll();\n      setIncidents(updatedIncidents);\n    } catch (error) {\n      console.error('Error al reportar incidente:', error);\n      alert('Error al reportar incidente');\n    }\n  };\n\n  // Esta función se llama cuando se hace clic en el mapa y se obtienen coordenadas\n  const handleCoordinatesSelected = coords => {\n    setSelectedCoordinates(coords);\n    console.log('Coordenadas seleccionadas:', coords);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Consulta de Rutas y Transitabilidad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mb-3\",\n      onClick: () => setShowReportForm(true),\n      children: \"Reportar Incidente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoadFilter, {\n      incidentTypes: incidentTypes,\n      selectedType: selectedType,\n      onTypeChange: val => setSelectedType(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      roads: filteredRoads,\n      municipalities: municipalities,\n      onRoadClick: handleViewRoad,\n      highlightRoad: selectedRoad,\n      incidents: incidents,\n      onCoordinatesSelected: handleCoordinatesSelected // Pasamos la función para seleccionar coords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoadList, {\n      roads: filteredRoads,\n      onViewRoad: handleViewRoad,\n      onViewReason: handleViewReason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncidentModal, {\n      show: showIncidentModal,\n      onHide: () => setShowIncidentModal(false),\n      incidentReasonPhoto: incidentReasonPhoto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportIncidentForm, {\n      show: showReportForm,\n      onHide: () => setShowReportForm(false),\n      onSubmit: handleReportSubmit,\n      selectedCoordinates: selectedCoordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"DsFPVS7cT5n3UkKuVJfs/7ugYLM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Map","RoadList","RoadFilter","IncidentModal","ReportIncidentForm","roadsAPI","municipalitiesAPI","incidentsAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","roads","setRoads","municipalities","setMunicipalities","incidents","setIncidents","selectedRoad","setSelectedRoad","showIncidentModal","setShowIncidentModal","incidentReasonPhoto","setIncidentReasonPhoto","showReportForm","setShowReportForm","selectedType","setSelectedType","selectedCoordinates","setSelectedCoordinates","incidentTypes","loadData","r","getAll","m","i","error","console","handleViewRoad","road","handleViewReason","filteredRoads","filter","incidentType","handleReportSubmit","formData","newIncident","create","log","alert","updatedIncidents","handleCoordinatesSelected","coords","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onTypeChange","val","onRoadClick","highlightRoad","onCoordinatesSelected","onViewRoad","onViewReason","show","onHide","onSubmit","_c","$RefreshReg$"],"sources":["E:/proyeco final web 2/front/fronted/src/pages/Public/Home.js"],"sourcesContent":["// src/pages/Public/Home.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Map from '../../components/Map';\r\nimport RoadList from '../../components/RoadList';\r\nimport RoadFilter from '../../components/RoadFilter';\r\nimport IncidentModal from '../../components/IncidentModal';\r\nimport ReportIncidentForm from '../../components/ReportIncidentForm';\r\n\r\nimport roadsAPI from '../../api/roadsAPI';\r\nimport municipalitiesAPI from '../../api/municipalitiesAPI';\r\nimport incidentsAPI from '../../api/incidentsAPI';\r\n\r\nconst Home = () => {\r\n  const [roads, setRoads] = useState([]);\r\n  const [municipalities, setMunicipalities] = useState([]);\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [selectedRoad, setSelectedRoad] = useState(null);\r\n  const [showIncidentModal, setShowIncidentModal] = useState(false);\r\n  const [incidentReasonPhoto, setIncidentReasonPhoto] = useState(null);\r\n  const [showReportForm, setShowReportForm] = useState(false);\r\n  const [selectedType, setSelectedType] = useState('');\r\n\r\n  // Estado para coordenadas seleccionadas en el mapa\r\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\r\n\r\n  const incidentTypes = [\r\n    'Transitable con desvios y/o horarios de circulación',\r\n    'No transitable por conflictos sociales',\r\n    'Restricción vehicular',\r\n    'No transitable tráfico cerrado',\r\n    'Restricción vehicular, especial'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      try {\r\n        const r = await roadsAPI.getAll();\r\n        const m = await municipalitiesAPI.getAll();\r\n        const i = await incidentsAPI.getAll(); // sin token\r\n        setRoads(r);\r\n        setMunicipalities(m);\r\n        setIncidents(i);\r\n      } catch (error) {\r\n        console.error('Error cargando datos:', error);\r\n      }\r\n    }\r\n    loadData();\r\n  }, []);\r\n\r\n  const handleViewRoad = (road) => {\r\n    setSelectedRoad(road);\r\n  };\r\n\r\n  const handleViewReason = (road) => {\r\n    setIncidentReasonPhoto(road.incidentReasonPhoto || null);\r\n    setShowIncidentModal(true);\r\n  };\r\n\r\n  const filteredRoads = selectedType\r\n    ? roads.filter(r => r.incidentType === selectedType)\r\n    : roads;\r\n\r\n  // Esta función se llama cuando se envía el formulario del incidente\r\n \r\nconst handleReportSubmit = async (formData) => {\r\n  try {\r\n    const newIncident = await incidentsAPI.create(formData);\r\n    console.log('Incidente creado:', newIncident);\r\n    alert('Incidente reportado con éxito');\r\n    setShowReportForm(false);\r\n    const updatedIncidents = await incidentsAPI.getAll();\r\n    setIncidents(updatedIncidents);\r\n  } catch (error) {\r\n    console.error('Error al reportar incidente:', error);\r\n    alert('Error al reportar incidente');\r\n  }\r\n};\r\n\r\n  // Esta función se llama cuando se hace clic en el mapa y se obtienen coordenadas\r\n  const handleCoordinatesSelected = (coords) => {\r\n    setSelectedCoordinates(coords);\r\n    console.log('Coordenadas seleccionadas:', coords);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Consulta de Rutas y Transitabilidad</h1>\r\n      <button className=\"btn btn-success mb-3\" onClick={() => setShowReportForm(true)}>Reportar Incidente</button>\r\n      <RoadFilter\r\n        incidentTypes={incidentTypes}\r\n        selectedType={selectedType}\r\n        onTypeChange={(val) => setSelectedType(val)}\r\n      />\r\n      <Map\r\n        roads={filteredRoads}\r\n        municipalities={municipalities}\r\n        onRoadClick={handleViewRoad}\r\n        highlightRoad={selectedRoad}\r\n        incidents={incidents}\r\n        onCoordinatesSelected={handleCoordinatesSelected} // Pasamos la función para seleccionar coords\r\n      />\r\n      <RoadList\r\n        roads={filteredRoads}\r\n        onViewRoad={handleViewRoad}\r\n        onViewReason={handleViewReason}\r\n      />\r\n\r\n      <IncidentModal\r\n        show={showIncidentModal}\r\n        onHide={() => setShowIncidentModal(false)}\r\n        incidentReasonPhoto={incidentReasonPhoto}\r\n      />\r\n      <ReportIncidentForm\r\n        show={showReportForm}\r\n        onHide={() => setShowReportForm(false)}\r\n        onSubmit={handleReportSubmit}\r\n        selectedCoordinates={selectedCoordinates}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}