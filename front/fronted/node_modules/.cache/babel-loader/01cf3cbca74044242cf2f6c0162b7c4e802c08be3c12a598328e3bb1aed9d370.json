{"ast":null,"code":"// src/api/incidentsAPI.js\nimport axios from './axiosInstance';\nconst incidentsAPI = {\n  getAll: async token => {\n    try {\n      const headers = {};\n      if (token) headers.Authorization = `Bearer ${token}`;\n      const res = await axios.get('/incidents', {\n        headers\n      });\n      return res.data;\n    } catch (error) {\n      console.error('Error obteniendo incidentes:', error);\n      throw error;\n    }\n  },\n  create: async (incidentData, token) => {\n    // incidentData es un objeto con { type, reason, coordinates: {lat, lng} }\n    try {\n      const headers = {};\n      if (token) headers.Authorization = `Bearer ${token}`;\n      const res = await axios.post('/incidents', incidentData, {\n        headers\n      });\n      return res.data;\n    } catch (error) {\n      console.error('Error creando incidente:', error);\n      throw error;\n    }\n  },\n  delete: async (id, token) => {\n    try {\n      const headers = {};\n      if (token) headers.Authorization = `Bearer ${token}`;\n      await axios.delete(`/incidents/${id}`, {\n        headers\n      });\n    } catch (error) {\n      console.error(`Error eliminando incidente con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\nexport default incidentsAPI;","map":{"version":3,"names":["axios","incidentsAPI","getAll","token","headers","Authorization","res","get","data","error","console","create","incidentData","post","delete","id"],"sources":["E:/proyeco final web 2/front/fronted/src/api/incidentsAPI.js"],"sourcesContent":["// src/api/incidentsAPI.js\r\nimport axios from './axiosInstance';\r\n\r\nconst incidentsAPI = {\r\n  getAll: async (token) => {\r\n    try {\r\n      const headers = {};\r\n      if (token) headers.Authorization = `Bearer ${token}`;\r\n      \r\n      const res = await axios.get('/incidents', { headers });\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Error obteniendo incidentes:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (incidentData, token) => {\r\n    // incidentData es un objeto con { type, reason, coordinates: {lat, lng} }\r\n    try {\r\n      const headers = {};\r\n      if (token) headers.Authorization = `Bearer ${token}`;\r\n      \r\n      const res = await axios.post('/incidents', incidentData, { headers });\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Error creando incidente:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  delete: async (id, token) => {\r\n    try {\r\n      const headers = {};\r\n      if (token) headers.Authorization = `Bearer ${token}`;\r\n      \r\n      await axios.delete(`/incidents/${id}`, { headers });\r\n    } catch (error) {\r\n      console.error(`Error eliminando incidente con ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default incidentsAPI;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,MAAOC,KAAK,IAAK;IACvB,IAAI;MACF,MAAMC,OAAO,GAAG,CAAC,CAAC;MAClB,IAAID,KAAK,EAAEC,OAAO,CAACC,aAAa,GAAG,UAAUF,KAAK,EAAE;MAEpD,MAAMG,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,YAAY,EAAE;QAAEH;MAAQ,CAAC,CAAC;MACtD,OAAOE,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,MAAM,EAAE,MAAAA,CAAOC,YAAY,EAAET,KAAK,KAAK;IACrC;IACA,IAAI;MACF,MAAMC,OAAO,GAAG,CAAC,CAAC;MAClB,IAAID,KAAK,EAAEC,OAAO,CAACC,aAAa,GAAG,UAAUF,KAAK,EAAE;MAEpD,MAAMG,GAAG,GAAG,MAAMN,KAAK,CAACa,IAAI,CAAC,YAAY,EAAED,YAAY,EAAE;QAAER;MAAQ,CAAC,CAAC;MACrE,OAAOE,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDK,MAAM,EAAE,MAAAA,CAAOC,EAAE,EAAEZ,KAAK,KAAK;IAC3B,IAAI;MACF,MAAMC,OAAO,GAAG,CAAC,CAAC;MAClB,IAAID,KAAK,EAAEC,OAAO,CAACC,aAAa,GAAG,UAAUF,KAAK,EAAE;MAEpD,MAAMH,KAAK,CAACc,MAAM,CAAC,cAAcC,EAAE,EAAE,EAAE;QAAEX;MAAQ,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqCM,EAAE,GAAG,EAAEN,KAAK,CAAC;MAChE,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeR,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}