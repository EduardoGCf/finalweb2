{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyeco final web 2\\\\front\\\\fronted\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NavbarPublic from '../components/NavbarPublic';\nimport Map from '../components/Map';\nimport RoadList from '../components/RoadList';\nimport RoadFilter from '../components/RoadFilter';\nimport IncidentModal from '../components/IncidentModal';\nimport ReportIncidentForm from '../components/ReportIncidentForm';\nimport roadsAPI from '../api/roadsAPI';\nimport municipalitiesAPI from '../api/municipalitiesAPI';\nimport incidentsAPI from '../api/incidentsAPI';\nimport incidentRequestsAPI from '../api/incidentRequestsAPI';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [roads, setRoads] = useState([]);\n  const [municipalities, setMunicipalities] = useState([]);\n  const [incidents, setIncidents] = useState([]);\n  const [selectedRoad, setSelectedRoad] = useState(null);\n  const [showIncidentModal, setShowIncidentModal] = useState(false);\n  const [incidentReasonPhoto, setIncidentReasonPhoto] = useState(null);\n  const [showReportForm, setShowReportForm] = useState(false);\n  const [selectedType, setSelectedType] = useState('');\n  const incidentTypes = ['Transitable con desvíos y/o horarios de circulación', 'No transitable por conflictos sociales', 'Restricción vehicular', 'No transitable tráfico cerrado', 'Restricción vehicular, especial'];\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const [r, m, i] = await Promise.all([roadsAPI.getAll(), municipalitiesAPI.getAll(), incidentsAPI.getAll()]);\n        setRoads(r);\n        setMunicipalities(m);\n        setIncidents(i);\n      } catch (error) {\n        console.error('Error cargando datos:', error);\n      }\n    };\n    loadData();\n  }, []);\n  const handleViewRoad = road => {\n    setSelectedRoad(road);\n  };\n  const handleViewReason = road => {\n    setIncidentReasonPhoto(road.incidentReasonPhoto || null);\n    setShowIncidentModal(true);\n  };\n  const filteredRoads = selectedType ? roads.filter(r => r.incidentType === selectedType) : roads;\n  const handleReportSubmit = async formData => {\n    try {\n      await incidentRequestsAPI.create(formData);\n      alert('Incidente reportado con éxito');\n      setShowReportForm(false);\n    } catch (error) {\n      alert('Error al reportar incidente');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarPublic, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Consulta de Rutas y Transitabilidad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mb-3\",\n        onClick: () => setShowReportForm(true),\n        children: \"Reportar Incidente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoadFilter, {\n        incidentTypes: incidentTypes,\n        selectedType: selectedType,\n        onTypeChange: val => setSelectedType(val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        roads: filteredRoads,\n        municipalities: municipalities,\n        incidents: incidents,\n        highlightRoad: selectedRoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoadList, {\n        roads: filteredRoads,\n        onViewRoad: handleViewRoad,\n        onViewReason: handleViewReason\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IncidentModal, {\n        show: showIncidentModal,\n        onHide: () => setShowIncidentModal(false),\n        incidentReasonPhoto: incidentReasonPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportIncidentForm, {\n        show: showReportForm,\n        onHide: () => setShowReportForm(false),\n        onSubmit: handleReportSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"Uxd1ilDD6qmSvf9kM0L3F37nTx4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","NavbarPublic","Map","RoadList","RoadFilter","IncidentModal","ReportIncidentForm","roadsAPI","municipalitiesAPI","incidentsAPI","incidentRequestsAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","roads","setRoads","municipalities","setMunicipalities","incidents","setIncidents","selectedRoad","setSelectedRoad","showIncidentModal","setShowIncidentModal","incidentReasonPhoto","setIncidentReasonPhoto","showReportForm","setShowReportForm","selectedType","setSelectedType","incidentTypes","loadData","r","m","i","Promise","all","getAll","error","console","handleViewRoad","road","handleViewReason","filteredRoads","filter","incidentType","handleReportSubmit","formData","create","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onTypeChange","val","highlightRoad","onViewRoad","onViewReason","show","onHide","onSubmit","_c","$RefreshReg$"],"sources":["E:/proyeco final web 2/front/fronted/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport NavbarPublic from '../components/NavbarPublic';\r\nimport Map from '../components/Map';\r\nimport RoadList from '../components/RoadList';\r\nimport RoadFilter from '../components/RoadFilter';\r\nimport IncidentModal from '../components/IncidentModal';\r\nimport ReportIncidentForm from '../components/ReportIncidentForm';\r\n\r\nimport roadsAPI from '../api/roadsAPI';\r\nimport municipalitiesAPI from '../api/municipalitiesAPI';\r\nimport incidentsAPI from '../api/incidentsAPI';\r\nimport incidentRequestsAPI from '../api/incidentRequestsAPI';\r\n\r\nconst Home = () => {\r\n  const [roads, setRoads] = useState([]);\r\n  const [municipalities, setMunicipalities] = useState([]);\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [selectedRoad, setSelectedRoad] = useState(null);\r\n  const [showIncidentModal, setShowIncidentModal] = useState(false);\r\n  const [incidentReasonPhoto, setIncidentReasonPhoto] = useState(null);\r\n  const [showReportForm, setShowReportForm] = useState(false);\r\n  const [selectedType, setSelectedType] = useState('');\r\n\r\n  const incidentTypes = [\r\n    'Transitable con desvíos y/o horarios de circulación',\r\n    'No transitable por conflictos sociales',\r\n    'Restricción vehicular',\r\n    'No transitable tráfico cerrado',\r\n    'Restricción vehicular, especial'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        const [r, m, i] = await Promise.all([\r\n          roadsAPI.getAll(),\r\n          municipalitiesAPI.getAll(),\r\n          incidentsAPI.getAll()\r\n        ]);\r\n        setRoads(r);\r\n        setMunicipalities(m);\r\n        setIncidents(i);\r\n      } catch (error) {\r\n        console.error('Error cargando datos:', error);\r\n      }\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  const handleViewRoad = (road) => {\r\n    setSelectedRoad(road);\r\n  };\r\n\r\n  const handleViewReason = (road) => {\r\n    setIncidentReasonPhoto(road.incidentReasonPhoto || null);\r\n    setShowIncidentModal(true);\r\n  };\r\n\r\n  const filteredRoads = selectedType\r\n    ? roads.filter(r => r.incidentType === selectedType)\r\n    : roads;\r\n\r\n  const handleReportSubmit = async (formData) => {\r\n    try {\r\n      await incidentRequestsAPI.create(formData);\r\n      alert('Incidente reportado con éxito');\r\n      setShowReportForm(false);\r\n    } catch (error) {\r\n      alert('Error al reportar incidente');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarPublic />\r\n      <div className=\"container mt-4\">\r\n        <h1>Consulta de Rutas y Transitabilidad</h1>\r\n        <button className=\"btn btn-success mb-3\" onClick={() => setShowReportForm(true)}>Reportar Incidente</button>\r\n        <RoadFilter\r\n          incidentTypes={incidentTypes}\r\n          selectedType={selectedType}\r\n          onTypeChange={(val) => setSelectedType(val)}\r\n        />\r\n        <Map\r\n          roads={filteredRoads}\r\n          municipalities={municipalities}\r\n          incidents={incidents}\r\n          highlightRoad={selectedRoad}\r\n        />\r\n        <RoadList\r\n          roads={filteredRoads}\r\n          onViewRoad={handleViewRoad}\r\n          onViewReason={handleViewReason}\r\n        />\r\n\r\n        <IncidentModal\r\n          show={showIncidentModal}\r\n          onHide={() => setShowIncidentModal(false)}\r\n          incidentReasonPhoto={incidentReasonPhoto}\r\n        />\r\n        <ReportIncidentForm\r\n          show={showReportForm}\r\n          onHide={() => setShowReportForm(false)}\r\n          onSubmit={handleReportSubmit}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}