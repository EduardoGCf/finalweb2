{"ast":null,"code":"import axios from 'axios';\nimport { logout } from './authHelper'; // función auxiliar para manejar logout global (la creamos ahora)\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\nconst instance = axios.create({\n  baseURL: API_URL\n});\n\n// Interceptor para agregar token\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Interceptor de respuesta para manejar errores globalmente\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    if (error.response.status === 401 || error.response.status === 403) {\n      // Usuario no autorizado o sin rol apropiado\n      logout();\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport async function fetchRoads() {\n  const res = await instance.get('/roads');\n  return res.data;\n}\nexport async function fetchMunicipalities() {\n  const res = await instance.get('/municipalities');\n  return res.data;\n}\nexport async function fetchIncidents() {\n  const res = await instance.get('/incidents');\n  return res.data;\n}\nexport async function fetchUsers() {\n  const res = await instance.get('/users');\n  return res.data;\n}\nexport async function createUser(email, password, role) {\n  const res = await instance.post('/users', {\n    email,\n    password,\n    role\n  });\n  return res.data;\n}\nexport async function updateUserPassword(userId, newPassword) {\n  const res = await instance.put(`/users/${userId}/password`, {\n    newPassword\n  });\n  return res.data;\n}\n\n// Solicitudes de incidencia (público)\nexport async function createIncidentRequest(detail, imageFile, coordinates) {\n  const formData = new FormData();\n  formData.append('detail', detail);\n  formData.append('coordinates', JSON.stringify(coordinates));\n  if (imageFile) formData.append('image', imageFile);\n  const res = await instance.post('/incidents/requests', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return res.data;\n}\nexport async function fetchIncidentRequests() {\n  const res = await instance.get('/incidents/requests');\n  return res.data;\n}\nexport async function approveIncidentRequest(requestId) {\n  const res = await instance.post(`/incidents/requests/${requestId}/approve`);\n  return res.data;\n}\n\n// Para obtener una carretera específica\nexport async function fetchRoadById(id) {\n  const res = await instance.get(`/roads/${id}`);\n  return res.data;\n}","map":{"version":3,"names":["axios","logout","API_URL","process","env","REACT_APP_API_URL","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","status","window","location","href","Promise","reject","fetchRoads","res","get","data","fetchMunicipalities","fetchIncidents","fetchUsers","createUser","email","password","role","post","updateUserPassword","userId","newPassword","put","createIncidentRequest","detail","imageFile","coordinates","formData","FormData","append","JSON","stringify","fetchIncidentRequests","approveIncidentRequest","requestId","fetchRoadById","id"],"sources":["E:/proyeco final web 2/front/fronted/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { logout } from './authHelper'; // función auxiliar para manejar logout global (la creamos ahora)\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\r\n\r\nconst instance = axios.create({\r\n  baseURL: API_URL\r\n});\r\n\r\n// Interceptor para agregar token\r\ninstance.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Interceptor de respuesta para manejar errores globalmente\r\ninstance.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response) {\r\n      if (error.response.status === 401 || error.response.status === 403) {\r\n        // Usuario no autorizado o sin rol apropiado\r\n        logout();\r\n        window.location.href = '/login'; \r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport async function fetchRoads() {\r\n  const res = await instance.get('/roads');\r\n  return res.data;\r\n}\r\n\r\nexport async function fetchMunicipalities() {\r\n  const res = await instance.get('/municipalities');\r\n  return res.data;\r\n}\r\n\r\nexport async function fetchIncidents() {\r\n  const res = await instance.get('/incidents');\r\n  return res.data;\r\n}\r\n\r\nexport async function fetchUsers() {\r\n  const res = await instance.get('/users');\r\n  return res.data;\r\n}\r\n\r\nexport async function createUser(email, password, role) {\r\n  const res = await instance.post('/users', { email, password, role });\r\n  return res.data;\r\n}\r\n\r\nexport async function updateUserPassword(userId, newPassword) {\r\n  const res = await instance.put(`/users/${userId}/password`, { newPassword });\r\n  return res.data;\r\n}\r\n\r\n// Solicitudes de incidencia (público)\r\nexport async function createIncidentRequest(detail, imageFile, coordinates) {\r\n  const formData = new FormData();\r\n  formData.append('detail', detail);\r\n  formData.append('coordinates', JSON.stringify(coordinates));\r\n  if (imageFile) formData.append('image', imageFile);\r\n\r\n  const res = await instance.post('/incidents/requests', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n  return res.data;\r\n}\r\n\r\nexport async function fetchIncidentRequests() {\r\n  const res = await instance.get('/incidents/requests');\r\n  return res.data;\r\n}\r\n\r\nexport async function approveIncidentRequest(requestId) {\r\n  const res = await instance.post(`/incidents/requests/${requestId}/approve`);\r\n  return res.data;\r\n}\r\n\r\n// Para obtener una carretera específica\r\nexport async function fetchRoadById(id) {\r\n  const res = await instance.get(`/roads/${id}`);\r\n  return res.data;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}