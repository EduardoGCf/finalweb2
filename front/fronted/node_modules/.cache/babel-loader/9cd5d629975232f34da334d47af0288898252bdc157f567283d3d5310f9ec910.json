{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyeco final web 2\\\\front\\\\fronted\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport authAPI from '../api/authAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    user: null,\n    token: null\n  });\n  const login = async (email, password) => {\n    const data = await authAPI.login(email, password);\n    if (data.token) {\n      setAuth({\n        user: {\n          email: email,\n          role: data.role\n        },\n        token: data.token\n      });\n    }\n    return data;\n  };\n  const logout = () => {\n    setAuth({\n      user: null,\n      token: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ATWnWD1Ux/b9SoxXBZcO7P0tRxQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","user","token","login","email","password","data","role","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/proyeco final web 2/front/fronted/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport authAPI from '../api/authAPI';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState({ user: null, token: null });\r\n\r\n  const login = async (email, password) => {\r\n    const data = await authAPI.login(email, password);\r\n    if (data.token) {\r\n      setAuth({ user: { email: email, role: data.role }, token: data.token });\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const logout = () => {\r\n    setAuth({ user: null, token: null });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ auth, setAuth, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,OAAO,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAAEW,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC;EAE7D,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMC,IAAI,GAAG,MAAMd,OAAO,CAACW,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;IACjD,IAAIC,IAAI,CAACJ,KAAK,EAAE;MACdF,OAAO,CAAC;QAAEC,IAAI,EAAE;UAAEG,KAAK,EAAEA,KAAK;UAAEG,IAAI,EAAED,IAAI,CAACC;QAAK,CAAC;QAAEL,KAAK,EAAEI,IAAI,CAACJ;MAAM,CAAC,CAAC;IACzE;IACA,OAAOI,IAAI;EACb,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBR,OAAO,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;EACtC,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI;MAAEC,OAAO;MAAEG,KAAK;MAAEK;IAAO,CAAE;IAAAX,QAAA,EAC3DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CApBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}