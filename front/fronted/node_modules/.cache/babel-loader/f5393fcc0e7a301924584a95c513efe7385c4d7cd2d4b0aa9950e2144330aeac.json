{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyeco final web 2\\\\front\\\\fronted\\\\src\\\\components\\\\MapView\\\\MapView.js\",\n  _s = $RefreshSig$();\n// src/components/MapView/MapView.js\nimport React, { useCallback, useRef, useState } from 'react';\nimport { GoogleMap, LoadScript, Polyline, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\nconst center = {\n  lat: -16.290154,\n  // Centro aproximado de Bolivia\n  lng: -63.588653\n};\nfunction MapView({\n  roads,\n  municipalities,\n  incidents,\n  selectedRoad\n}) {\n  _s();\n  const mapRef = useRef();\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []);\n\n  // Ejemplo: Dibujar carreteras (un array de carreteras con puntos)\n  // roads: [{id, name, points: [{lat, lng}, ...], blocked, reason}]\n  // municipalities: [{id, name, coordinates: {lat, lng}}]\n  // incidents: [{id, type, coordinates: {lat, lng}}]\n\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 6,\n      onLoad: onLoad,\n      children: [roads && roads.map(road => /*#__PURE__*/_jsxDEV(Polyline, {\n        path: road.points,\n        options: {\n          strokeColor: road.blocked ? 'red' : 'green',\n          strokeOpacity: 0.8,\n          strokeWeight: 4\n        }\n      }, road.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)), municipalities && municipalities.map(m => /*#__PURE__*/_jsxDEV(Marker, {\n        position: m.coordinates,\n        title: m.name\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), incidents && incidents.map(i => /*#__PURE__*/_jsxDEV(Marker, {\n        position: i.coordinates,\n        icon: {\n          url: 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'\n        },\n        title: i.type\n      }, i.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(MapView, \"WYjahiVxY8sTdszoIOcK2iNaRlQ=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useCallback","useRef","useState","GoogleMap","LoadScript","Polyline","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapView","roads","municipalities","incidents","selectedRoad","_s","mapRef","onLoad","map","current","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","children","mapContainerStyle","zoom","road","path","points","options","strokeColor","blocked","strokeOpacity","strokeWeight","id","fileName","_jsxFileName","lineNumber","columnNumber","m","position","coordinates","title","name","i","icon","url","type","_c","$RefreshReg$"],"sources":["E:/proyeco final web 2/front/fronted/src/components/MapView/MapView.js"],"sourcesContent":["// src/components/MapView/MapView.js\r\nimport React, { useCallback, useRef, useState } from 'react';\r\nimport { GoogleMap, LoadScript, Polyline, Marker } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '600px'\r\n};\r\n\r\nconst center = {\r\n  lat: -16.290154, // Centro aproximado de Bolivia\r\n  lng: -63.588653\r\n};\r\n\r\nfunction MapView({ roads, municipalities, incidents, selectedRoad }) {\r\n  const mapRef = useRef();\r\n  \r\n  const onLoad = useCallback(map => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  // Ejemplo: Dibujar carreteras (un array de carreteras con puntos)\r\n  // roads: [{id, name, points: [{lat, lng}, ...], blocked, reason}]\r\n  // municipalities: [{id, name, coordinates: {lat, lng}}]\r\n  // incidents: [{id, type, coordinates: {lat, lng}}]\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={6}\r\n        onLoad={onLoad}\r\n      >\r\n        {/* Dibujar carreteras */}\r\n        {roads && roads.map(road => (\r\n          <Polyline \r\n            key={road.id}\r\n            path={road.points}\r\n            options={{\r\n              strokeColor: road.blocked ? 'red' : 'green',\r\n              strokeOpacity: 0.8,\r\n              strokeWeight: 4\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {/* Marcadores de municipios */}\r\n        {municipalities && municipalities.map(m => (\r\n          <Marker\r\n            key={m.id}\r\n            position={m.coordinates}\r\n            title={m.name}\r\n          />\r\n        ))}\r\n\r\n        {/* Marcadores de incidentes */}\r\n        {incidents && incidents.map(i => (\r\n          <Marker\r\n            key={i.id}\r\n            position={i.coordinates}\r\n            icon={{\r\n              url: 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'\r\n            }}\r\n            title={i.type}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default MapView;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,SAAS;EAAE;EACjBC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,SAASC,OAAOA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACnE,MAAMC,MAAM,GAAGpB,MAAM,CAAC,CAAC;EAEvB,MAAMqB,MAAM,GAAGtB,WAAW,CAACuB,GAAG,IAAI;IAChCF,MAAM,CAACG,OAAO,GAAGD,GAAG;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;;EAEA,oBACEf,OAAA,CAACJ,UAAU;IAACqB,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA8B;IAAAC,QAAA,eACtErB,OAAA,CAACL,SAAS;MACR2B,iBAAiB,EAAErB,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACfmB,IAAI,EAAE,CAAE;MACRT,MAAM,EAAEA,MAAO;MAAAO,QAAA,GAGdb,KAAK,IAAIA,KAAK,CAACO,GAAG,CAACS,IAAI,iBACtBxB,OAAA,CAACH,QAAQ;QAEP4B,IAAI,EAAED,IAAI,CAACE,MAAO;QAClBC,OAAO,EAAE;UACPC,WAAW,EAAEJ,IAAI,CAACK,OAAO,GAAG,KAAK,GAAG,OAAO;UAC3CC,aAAa,EAAE,GAAG;UAClBC,YAAY,EAAE;QAChB;MAAE,GANGP,IAAI,CAACQ,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACF,CAAC,EAGD3B,cAAc,IAAIA,cAAc,CAACM,GAAG,CAACsB,CAAC,iBACrCrC,OAAA,CAACF,MAAM;QAELwC,QAAQ,EAAED,CAAC,CAACE,WAAY;QACxBC,KAAK,EAAEH,CAAC,CAACI;MAAK,GAFTJ,CAAC,CAACL,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACF,CAAC,EAGD1B,SAAS,IAAIA,SAAS,CAACK,GAAG,CAAC2B,CAAC,iBAC3B1C,OAAA,CAACF,MAAM;QAELwC,QAAQ,EAAEI,CAAC,CAACH,WAAY;QACxBI,IAAI,EAAE;UACJC,GAAG,EAAE;QACP,CAAE;QACFJ,KAAK,EAAEE,CAAC,CAACG;MAAK,GALTH,CAAC,CAACV,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB;AAACxB,EAAA,CAxDQL,OAAO;AAAAuC,EAAA,GAAPvC,OAAO;AA0DhB,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}