{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyeco final web 2\\\\front\\\\fronted\\\\src\\\\pages\\\\PublicHome.js\",\n  _s = $RefreshSig$();\n// src/pages/PublicHome.js\nimport React, { useEffect, useState } from 'react';\nimport MapView from '../components/MapView/MapView';\nimport RoadsList from '../components/RoadsList';\nimport { fetchRoads, fetchMunicipalities, fetchIncidents } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PublicHome() {\n  _s();\n  const [roads, setRoads] = useState([]);\n  const [municipalities, setMunicipalities] = useState([]);\n  const [incidents, setIncidents] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      const r = await fetchRoads();\n      const m = await fetchMunicipalities();\n      const i = await fetchIncidents();\n      setRoads(r);\n      setMunicipalities(m);\n      setIncidents(i);\n    }\n    loadData();\n  }, []);\n  const handleViewRoad = roadId => {\n    // Lógica para resaltar la carretera específica en el mapa\n    console.log(\"Ver carretera\", roadId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sistema de Consulta de Transporte en Carreteras\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      roads: roads,\n      municipalities: municipalities,\n      incidents: incidents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoadsList, {\n      roads: roads,\n      onViewRoad: handleViewRoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(PublicHome, \"JBjXO6Ju/LPObegdV2XY17CRaGU=\");\n_c = PublicHome;\nexport default PublicHome;\nvar _c;\n$RefreshReg$(_c, \"PublicHome\");","map":{"version":3,"names":["React","useEffect","useState","MapView","RoadsList","fetchRoads","fetchMunicipalities","fetchIncidents","jsxDEV","_jsxDEV","PublicHome","_s","roads","setRoads","municipalities","setMunicipalities","incidents","setIncidents","loadData","r","m","i","handleViewRoad","roadId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onViewRoad","_c","$RefreshReg$"],"sources":["E:/proyeco final web 2/front/fronted/src/pages/PublicHome.js"],"sourcesContent":["// src/pages/PublicHome.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport MapView from '../components/MapView/MapView';\r\nimport RoadsList from '../components/RoadsList';\r\nimport { fetchRoads, fetchMunicipalities, fetchIncidents } from '../services/api';\r\n\r\nfunction PublicHome() {\r\n  const [roads, setRoads] = useState([]);\r\n  const [municipalities, setMunicipalities] = useState([]);\r\n  const [incidents, setIncidents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      const r = await fetchRoads();\r\n      const m = await fetchMunicipalities();\r\n      const i = await fetchIncidents();\r\n      setRoads(r);\r\n      setMunicipalities(m);\r\n      setIncidents(i);\r\n    }\r\n    loadData();\r\n  }, []);\r\n\r\n  const handleViewRoad = (roadId) => {\r\n    // Lógica para resaltar la carretera específica en el mapa\r\n    console.log(\"Ver carretera\", roadId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sistema de Consulta de Transporte en Carreteras</h1>\r\n      <MapView roads={roads} municipalities={municipalities} incidents={incidents} />\r\n      <RoadsList roads={roads} onViewRoad={handleViewRoad} />\r\n      {/* Aquí puedes agregar el filtro de incidentes, botón \"Reportar incidente\", etc. */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PublicHome;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,UAAU,EAAEC,mBAAmB,EAAEC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,eAAeiB,QAAQA,CAAA,EAAG;MACxB,MAAMC,CAAC,GAAG,MAAMd,UAAU,CAAC,CAAC;MAC5B,MAAMe,CAAC,GAAG,MAAMd,mBAAmB,CAAC,CAAC;MACrC,MAAMe,CAAC,GAAG,MAAMd,cAAc,CAAC,CAAC;MAChCM,QAAQ,CAACM,CAAC,CAAC;MACXJ,iBAAiB,CAACK,CAAC,CAAC;MACpBH,YAAY,CAACI,CAAC,CAAC;IACjB;IACAH,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,cAAc,GAAIC,MAAM,IAAK;IACjC;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;EACtC,CAAC;EAED,oBACEd,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDrB,OAAA,CAACN,OAAO;MAACS,KAAK,EAAEA,KAAM;MAACE,cAAc,EAAEA,cAAe;MAACE,SAAS,EAAEA;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/ErB,OAAA,CAACL,SAAS;MAACQ,KAAK,EAAEA,KAAM;MAACmB,UAAU,EAAET;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpD,CAAC;AAEV;AAACnB,EAAA,CA9BQD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}